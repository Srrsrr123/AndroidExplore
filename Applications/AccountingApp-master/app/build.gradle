apply plugin: 'com.android.application'
apply plugin: 'jacoco' //加载代码覆盖库jacoco

jacoco {
    toolVersion = "0.7.9" //代码覆盖库jacoco版本号
}
android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.hanyuzhou.accountingapp"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            testCoverageEnabled = true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug{
            testCoverageEnabled = true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.robinhood.ticker:ticker:2.0.1'
    implementation 'com.android.support:support-v13:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
def coverageSourceDirs = [
        '../app/src/main/java'
]

task jacocoTestReport(type: JacocoReport) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."

    reports {
        xml.enabled = true
        html.enabled = true
    }

    getClassDirectories().setFrom( fileTree(
            //检测覆盖率的class所在目录(以项目class所在目录为准)
            dir: './build/intermediates/javac/debug/classes', //gradle2.3 class所在目录
            //gradle3.2 class所在目录 dir: './build/intermediates/javac/debug/compileDebugJavaWithJavac/classes',
            //增加以上目录中不需要检测的文件列表
            excludes: ['**/R*.class',
                       '**/*$InjectAdapter.class',
                       '**/*$ModuleAdapter.class',
                       '**/*$ViewInjector*.class'
            ]
    ))

    getSourceDirectories().setFrom(files(coverageSourceDirs)) //设置需要检测覆盖率的目录
    getExecutionData().setFrom(files("$buildDir/outputs/code-coverage/connected/account.ec"))//存储APP运行时产生报告的路径
}